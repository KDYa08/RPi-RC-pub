#listener

import rospy
import RPi.GPIO as GPIO
from std_msgs.msg import String

#전방 LED=4
#후방 LED=6
#전방 MOTOR=11,22,27
#후방 MOTOR=17,9,10
FL=4
RL=6
FM=[11,22,27]
RM=[17,9,10]

#GPIO 실제위치 모드로 
GPIO.setmode(GPIO.BCM)

#전방 LED
GPIO.setup(FL,GPIO.OUT)
GPIO.output(FL,0)

#후방 LED
GPIO.setup(RL,GPIO.OUT)
GPIO.output(RL,0)

#전방 MOTOR/후방 MOTOR
for pin in FM+RM:
    GPIO.setup(pin,GPIO.OUT)
    GPIO.output(pin,0)

#MOTOR 설정
pwm=GPIO.PWM(RM[0], 100)
pwm.start(0)


#MOTOR 속도 조절 함수
def motor(pin,speed):
    pwm.ChangeDutyCycle(abs(speed))
    #속도가 음수라면
    if speed<0:
        GPIO.output(pin[1],0)
        GPIO.output(pin[2],1)
    #속도가 양수라면
    elif speed>0:
        GPIO.output(pin[1],1)
        GPIO.output(pin[2],0)
    #아니면(속도가 0이라면)
    else:
        GPIO.output(pin[1],0)
        GPIO.output(pin[2],0)

#전방 LED 상태
#전방 LED 이전 상태
FL_IO=0
FL_num=0
#callback
def callback(data):
    global FL_IO
    global FL_num
    #받은 값의 이진수 표식 제거
    num=data.data[2:].zfill(6)
    print(num)

    #후방 MOTOR
    #w/s중 한개만 눌렀으면
    if int(num[4])^int(num[1]):
        #s를 눌렀으면
        if int(num[4])==1:
            #속도 100으로 후진
            motor(RM,100)
            print("FORWARD/RM 100")
        #w를 눌렀으면
        if int(num[1])==1:
            #속도 100으로 전진
            motor(RM,-100)
            print("BACKWARD/RM -100")
    else:
        #정지
        motor(RM,0)
    
    #전방 MOTOR
    #a/d중 한개만 눌렀으면
    if int(num[2])^int(num[0]):
        #d를 눌렀으면
        if int(num[0])==1:
            #우회전
            motor(FM,-100)
            print("RIGHT/FM -100")
        #a를 눌렀으면
        if int(num[2])==1:
            #좌회전
            motor(FM,100)
            print("LEFT/RM 100")
    else:
        #정지
        motor(FM,0)
    
    #전방 LED
    #이전 틱에서는 q를 누르지 않고 현재 틱에서 q를 눌렀으면
    if FL_num==0 and int(num[5])==1:
        #전방 LED 상태 교환
        if FL_IO==0:
            GPIO.output(FL,1)
            FL_IO=1
        else:
            GPIO.output(FL,0)
            FL_IO=0
    FL_num=int(num[5])
    
    """
    if int(num[3]):
        GPIO.output(RL,1)
        print("RL on")
    else:
        GPIO.output(RL,0)
        print("RL off")
    print()
    """

def listener():
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber('chatter', String, callback)
    rospy.spin()


if __name__== '__main__':
    listener()
    GPIO.cleanup()

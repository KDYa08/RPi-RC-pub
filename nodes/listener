#listener

import rospy
import RPi.GPIO as GPIO
from std_msgs.msg import String


#pin setup
FL=4
RL=6
FM=[11,22,27]
RM=[17,9,10]

#GPIO setup
GPIO.setmode(GPIO.BCM)

#FrontLed
GPIO.setup(FL,GPIO.OUT)
GPIO.output(FL,0)

#RearLed
GPIO.setup(RL,GPIO.OUT)
GPIO.output(RL,0)

#FrontMotor/RearMotor
for pin in FM+RM:
    GPIO.setup(pin,GPIO.OUT)
    GPIO.output(pin,0)

#motor setup
pwm=GPIO.PWM(RM[0], 100)
pwm.start(0)


#motor func
def motor(pin,speed):
    pwm.ChangeDutyCycle(abs(speed))
    if speed<0:
        GPIO.output(pin[1],0)
        GPIO.output(pin[2],1)
    elif speed>0:
        GPIO.output(pin[1],1)
        GPIO.output(pin[2],0)
    else:
        GPIO.output(pin[1],0)
        GPIO.output(pin[2],0)

FL_IO=0
FL_num=0
#callback
def callback(data):
    global FL_IO
    global FL_num
    
    num=data.data[2:].zfill(6)
    print(num)
    
    #RM
    if int(num[4])^int(num[1]):
        if int(num[4])==1:
            motor(RM,100)
            print("FORWARD/RM 100")
        if int(num[1])==1:
            motor(RM,-100)
            print("BACKWARD/RM -100")
    else:
        motor(RM,0)
    
    #FM
    if int(num[2])^int(num[0]):
        if int(num[0])==1:
            motor(FM,-100)
            print("RIGHT/FM -100")
        if int(num[2])==1:
            motor(FM,100)
            print("LEFT/RM 100")
    else:
        motor(FM,0)
    
    #FL
    if FL_num==0 and int(num[5])==1:
        if FL_IO==0:
            GPIO.output(FL,1)
            FL_IO=1
        else:
            GPIO.output(FL,0)
            FL_IO=0
    FL_num=int(num[5])
    
    #RL
    if int(num[3]):
        GPIO.output(RL,1)
        print("RL on")
    else:
        GPIO.output(RL,0)
        print("RL off")
    print()


def listener():
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber('chatter', String, callback)
    rospy.spin()


if __name__== '__main__':
    listener()
    GPIO.cleanup()

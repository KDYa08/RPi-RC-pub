#!/usr/bin/env python

import rospy
from geometry_msgs.msg import Twist
import sys, tty, termios, select
from pynput import keyboard
from std_msgs.msg import String

msg = """
Control Your TurtleBot3!
---------------------------
Moving around:
   q    w    e
   a    s    d
        x

CTRL-C to quit
"""

e = """
Communications Failed
"""

def talker():
    pub=rospy.Publisher('chatter', String, queue_size=10)
    rospy.init_node('talker', anonymous=True)
    rate= rospy.Rate(1)
    while not rospy.is_shutdown():
        hello_str= "1" #rospy.get_time()
        rospy.loginfo(hello_str)
        pub.publish(hello_str)
        rate.sleep()

def getKey():
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

if __name__ == '__main__':
    settings = termios.tcgetattr(sys.stdin)
    try:
        pub=rospy.Publisher('chatter', String, queue_size=10)
        status=0
        print(msg)
        while not rospy.is_shutdown():
            key = getKey()
            num=0
            if key == 'w' :
                rospy.loginfo(key, num)
                status = status + 1
                num+=1

            elif key == 's' :
                rospy.loginfo(key, num)
                status = status + 1
                num+=2

            elif key == 'a' :
                rospy.loginfo(key, num)
                status = status + 1
                num+=4

            elif key == 'd' :
                rospy.loginfo(key, num)
                status = status + 1
                num+=8

            elif key == 'q':
                rospy.loginfo(key, num)
                num+=16
                status = status + 1
            
            elif key == 'e':
                rospy.loginfo(key, num)
                num+=32
                status = status + 1

            elif key == 'Space':
                rospy.loginfo(key, num)
                num+=64
                status = status + 1

            else:
                if (key == '\x03'):
                    break

            if status == 20 :
                print(msg)
                status = 0

            pub.publish(num)

    except rospy.ROSInterruptException:
        print(e)
    
    finally:
        num = 0
        pub.publish(num)

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)